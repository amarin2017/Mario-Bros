#include <iostream>
//#include "player.h"
#include "SDL_Plotter.h"

using namespace std;

int main(int argc, char ** argv)
{
    const int windowHeight = 673;
    const int windowWidth = 436;
    //random pixels
    SDL_Plotter g (windowHeight, windowWidth);

    int rectPosX=300;
    int rectPosY=300;
    int width=10;
    int height=10;

    double jump_time = 0;


    while (!g.getQuit()) //loop goes forever until user puts exit
    {
        double horizontal = 0;

        if(g.kbhit()){
            g.getKey();
        }

        //grab input
        if (g.getKey() == UP_ARROW) {

            jump_time = 12.5;
        }

        else if (g.getKey()== DOWN_ARROW)
        {
            rectPosY = min (rectPosY +2, windowHeight - height);
        }
        else if(g.getKey() == LEFT_ARROW)
        {
            horizontal = -1;
        }
        else if (g.getKey() == RIGHT_ARROW)
        {
            horizontal = 1;
        }



        //draw loop

        //reset background color
        for (int col = 0; col < windowWidth; col++)
        {
            for (int row=0; row < windowHeight; row++)
            {
                g.plotPixel(col, row, 0, 0, 0);
            }
        }

        //draw rectangle
        for (int col = rectPosX; col < width +rectPosX; col++)
        {
            for (int row=rectPosY; row < height+rectPosY; row++)
            {
                g.plotPixel(col, row, 250, 32, 5);
            }
        }

        if (g.getKey() != UP_ARROW || rectPosY != windowHeight)
        {
            rectPosY = min(rectPosY + 1, windowHeight-height);
        }

        if(jump_time > 0)
        {
            rectPosY = max(rectPosY - 2, 0);
            jump_time -= 0.125;
        }

        if (horizontal == -1)
        {
            rectPosX = max (rectPosX - 1,0);
        }
        else if (horizontal == 1)
        {
            rectPosX = min (rectPosX + 1, windowWidth-width);
        }

        g.update();

    }
}
